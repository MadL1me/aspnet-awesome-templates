{
  "$schema": "http://json.schemastore.org/template",
  "author": "Ilya  Klimenko (MadL1me)",
  "classifications": [ "Webapp", "Asp net 6" ],
  "identity": "Asp.AwesomeTemplates.Main.CSharp",
  "name": "ASP.NET 6 Easy-to-use, modern and awesome template",
  "shortName": "asp-awesome-main",
  "sourceName": "AspAwesomeTemplate",
  "tags": {
    "type": "project",
    "language": "C#"
  },
  "symbols": {
    "example": {
      "type": "parameter",
      "descriptions": "Adds ExampleController with code-samples for libs and stuff with ASP.NET 6",
      "datatype": "bool",
      "defaultValue": "true"
    },
    "swagger": {
      "type": "parameter",
      "descriptions": "Enables swagger support",
      "datatype": "bool",
      "defaultValue": "true"
    },
    "frontend": {
      "type": "parameter",
      "descriptions": "Adds selected SPA framework (React/Vue)",
      "datatype": "choice",
      "defaultValue": "none",
      "choices": [
        {
          "choice": "react",
          "description": "Use React.Ts created with create-react-app and configured to be better"
        },
        {
          "choice": "none",
          "description": "Do not use any spa framework"
        }
      ]
    },
    "db": {
      "type": "parameter",
      "description": "Adds Database with Entity Framework and Docker-compose",
      "datatype": "choice",
      "defaultValue": "pgsql",
      "choices": [
        {
          "choice": "pgsql",
          "description": "Use PostgreSQL database inside docker compose with pgAdmin"
        },
        {
          "choice": "none",
          "description": "Do not use any database provider"
        }
      ]
    },
    "identity": {
      "type": "parameter",
      "description": "Adds ASP.NET Core Identity",
      "datatype": "bool",
      "defaultValue": "true"
    },
    "auth": {
      "type": "parameter",
      "description": "Adds selected authentication method for asp.net app",
      "datatype": "choice",
      "defaultValue": "jwt",
      "choices": [
        {
          "choice": "none",
          "description": "Do not use any authentication method"
        },
        {
          "choice": "jwt",
          "description": "Adds JWT authentication method"
        }
      ]
    },
    "UsePostgreSql": {
      "type": "computed",
      "value": "(db == \"pgsql\")"
    },
    "UseReact": {
      "type": "computed",
      "value": "(frontend == \"react\")"
    },
    "UseJwtAuth": {
      "type": "computed",
      "value": "(auth == \"jwt\")"
    },
    "UseAnyAuth": {
      "type": "computed",
      "value": "(auth != \"none\")"
    }
  },
  "sources": [
    {
      "modifiers": [
        {
          "condition": "(!example)",
          "exclude": [
            "Controllers/ExampleController.cs"
          ]
        },
        {
          "condition": "(!UseReact)",
          "exclude": [
            "react-ui/**"
          ]
        },
        {
          "condition": "(!UsePostgreSql)",
          "exclude": [
            "Data/AspAwesomeTemplateDbContext.cs"
          ]
        },
        {
          "condition": "(!UseAnyAuth)",
          "exclude": [
            "Controllers/AuthController.cs"
          ]
        }
      ]
    }
  ]
}
